package edu.sc.seis.fissuresUtil.bag;

import junit.framework.TestCase;
// JUnitDoclet begin import
import edu.sc.seis.fissuresUtil.bag.Statistics;
// JUnitDoclet end import

/**
* Generated by JUnitDoclet, a tool provided by
* ObjectFab GmbH under LGPL.
* Please see www.junitdoclet.org, www.gnu.org
* and www.objectfab.de for informations about
* the tool, the licence and the authors.
*/


public class StatisticsTest
// JUnitDoclet begin extends_implements
extends TestCase
// JUnitDoclet end extends_implements
{
  // JUnitDoclet begin class
  edu.sc.seis.fissuresUtil.bag.Statistics[] stat = null;

    int size = 4;

    public edu.sc.seis.fissuresUtil.bag.Statistics[] createInstanceArray() throws Exception {
      short size = 4;
      int[] intTestData = new int[size];
      short[] shortTestData = new short[size];
      float[] floatTestData = new float[size];
      double[] doubleTestData = new double[size];
      for (short i=0; i<size; i++) {
	  shortTestData[i] = i;
	  intTestData[i] = i;
	  floatTestData[i] = i;
	  doubleTestData[i] = i;
      } // end of for (int i=0; i<intTestData.length; i++)
      Statistics[] out = new edu.sc.seis.fissuresUtil.bag.Statistics[4];
      out[0] = new Statistics(shortTestData);
      out[1] = new Statistics(intTestData);
      out[2] = new Statistics(floatTestData);
      out[3] = new Statistics(doubleTestData);
      return out;
  }
  
  // JUnitDoclet end class
  
  public StatisticsTest(String name) {
    // JUnitDoclet begin method StatisticsTest
    super(name);
    // JUnitDoclet end method StatisticsTest
  }
  
  protected void setUp() throws Exception {
    // JUnitDoclet begin method testcase.setUp
    super.setUp();
    stat = createInstanceArray();
    // JUnitDoclet end method testcase.setUp
  }
  
  protected void tearDown() throws Exception {
    // JUnitDoclet begin method testcase.tearDown
    stat = null;
    super.tearDown();
    // JUnitDoclet end method testcase.tearDown
  }
  
  public void testMin() throws Exception {
    // JUnitDoclet begin method min
      for ( int i = 0; i<stat.length; i++) {
	  assertEquals("stat["+i+"]",  0, stat[i].min(), 0.0000001);
      } // end of for ()
      
    // JUnitDoclet end method min
  }
  
  public void testMax() throws Exception {
    // JUnitDoclet begin method max
      for ( int i = 0; i<stat.length; i++) {
	  assertEquals("stat["+i+"]",  stat[i].getLength()-1, stat[i].max(), 0.0000001);
      } // end of for ()
    // JUnitDoclet end method max
  }
  
  public void testMean() throws Exception {
    // JUnitDoclet begin method mean
      for ( int i = 0; i<stat.length; i++) {
	  assertEquals("stat["+i+"]", (stat[i].getLength()-1.0)/2, stat[i].mean(), 0.0000001);
      } // end of for ()
    // JUnitDoclet end method mean
  }
  
  public void testMinMaxMean() throws Exception {
    // JUnitDoclet begin method minMaxMean
    // JUnitDoclet end method minMaxMean
  }
  
  public void testVar() throws Exception {
    // JUnitDoclet begin method var
    // JUnitDoclet end method var
  }
  
  public void testStddev() throws Exception {
    // JUnitDoclet begin method stddev
    // JUnitDoclet end method stddev
  }
  
  public void testLinearLeastSquares() throws Exception {
    // JUnitDoclet begin method linearLeastSquares
     for ( int i = 0; i<stat.length; i++) {
	double[] out = stat[i].linearLeastSquares();
	assertEquals("stat["+i+"]", 0, out[0], 0.0000001);
	assertEquals("stat["+i+"]", 1, out[1], 0.0000001);
     } // end of for ()
    // JUnitDoclet end method linearLeastSquares
  }
  
  public void testAcf() throws Exception {
    // JUnitDoclet begin method acf
    // JUnitDoclet end method acf
  }
  
  public void testAcf95conf() throws Exception {
    // JUnitDoclet begin method acf95conf
    // JUnitDoclet end method acf95conf
  }
  
  public void testAcfTRatio() throws Exception {
    // JUnitDoclet begin method acfTRatio
    // JUnitDoclet end method acfTRatio
  }
  
  public void testPacf() throws Exception {
    // JUnitDoclet begin method pacf
    // JUnitDoclet end method pacf
  }
  
  public void testPacf95conf() throws Exception {
    // JUnitDoclet begin method pacf95conf
    // JUnitDoclet end method pacf95conf
  }
  
  public void testPacfTRatio() throws Exception {
    // JUnitDoclet begin method pacfTRatio
    // JUnitDoclet end method pacfTRatio
  }
  
  public void testGetLength() throws Exception {
    // JUnitDoclet begin method getLength
      for ( int i = 0; i<stat.length; i++) {
	  assertEquals( size, stat[i].getLength(), 0.0000001);
      } // end of for ()
    // JUnitDoclet end method getLength
  }
  
  public void testHistogram() throws Exception {
    // JUnitDoclet begin method histogram
    // JUnitDoclet end method histogram
  }
  
  public void testBinarySum() throws Exception {
    // JUnitDoclet begin method binarySum
    // JUnitDoclet end method binarySum
  }
  
  public void testBinarySumDevSqr() throws Exception {
    // JUnitDoclet begin method binarySumDevSqr
    // JUnitDoclet end method binarySumDevSqr
  }
  
  public void testBinarySumDevLag() throws Exception {
    // JUnitDoclet begin method binarySumDevLag
    // JUnitDoclet end method binarySumDevLag
  }
  
  public void testBinaryIndexSum() throws Exception {
    // JUnitDoclet begin method binaryIndexSum
      for ( int i = 0; i<stat.length; i++) {
	  int n=stat[i].getLength()-1;
	  assertEquals("stat["+i+"]", n*(n+1)*(2*n+1)/6, (int)stat[i].binaryIndexSum(0, stat[i].getLength()));
      } // end of for ()
    // JUnitDoclet end method binaryIndexSum
  }
  
  public void testMain() throws Exception {
    // JUnitDoclet begin method main
    // JUnitDoclet end method main
  }
  
  
  
  /**
  * JUnitDoclet moves marker to this method, if there is not match
  * for them in the regenerated code and if the marker is not empty.
  * This way, no test gets lost when regenerating after renaming.
  * Method testVault is supposed to be empty.
  */
  public void testVault() throws Exception {
    // JUnitDoclet begin method testcase.testVault
    // JUnitDoclet end method testcase.testVault
  }
  
  public static void main(String[] args) {
    // JUnitDoclet begin method testcase.main
    junit.textui.TestRunner.run(StatisticsTest.class);
    // JUnitDoclet end method testcase.main
  }
}
