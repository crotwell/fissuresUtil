
group = 'edu.sc.seis'
version = '1.1.0internal'

dependencies {
    compile project(':fissuresImpl') { transitive = true }
    compile project(':seisFile') { transitive = true }
    compile project(':TauP') { transitive = true }
    compile "com.isti:jevalresp:1.57"
    compile "org.hibernate:hibernate-core:3.3.2.GA"
    compile "org.hibernate:hibernate-ehcache:3.3.2.GA"
    compile "javassist:javassist:3.9.0.GA"
    compile "hibernate:jta:1.1"
    compile "hibernate:antlr:2.7.6"
    compile "dom4j:dom4j:1.6.1"
    compile "commons-logging:commons-logging:1.1"
    compile "isti:isti.util:1.0.3USC"
    compile "jdom:jdom:b9"
    compile "edu.sc.seis.mapData:etopo10:1.0"
    compile "hsqldb:hsqldb:1.8.0.10"
    compile "postgresql:postgresql:8.3-604.jdbc3"
    compile "mysql:mysql-connector-java:5.1.9"
    compile "xerces:xercesImpl:2.9.1"
    compile "xalan:xalan:2.7.1"
    compile "openmap:openmap:4.6.2"
    compile "itext:itext:2.0.7"
    compile "staxUSC:stax-api:1.0"
    compile group: 'staxUSC', name: 'stax', version: '1.1.1-dev', transitive: false
    compile "org.apache.velocity:velocity:1.5"
    compile "commons-collections:commons-collections:3.1"
    compile "commons-lang:commons-lang:2.4"
    compile "oro:oro:2.0.8"
    compile "jfreechart:jcommon:1.0.0"
    compile "jfreechart:jfreechart:1.0.1"
    compile "javamailUSC:javamail:1.3.2"
    compile "activationUSC:activation:1.0.2"
    testCompile "junit:junit:3.8.2"
    testCompile "junit-addons:junit-addons:1.4"
}

def getDExtras() {
    return [ 'seis.name':'sod-3.0.0alpha.sod',
                'org.omg.CORBA.ORBSingletonClass':'org.jacorb.orb.ORBSingleton',
                'python.path':'${LIB}',
                'java.awt.headless':'true',
                'org.omg.CORBA.ORBClass':'org.jacorb.orb.ORB',
                'swing.volatileImageBufferEnabled':'false',
                'java.endorsed.dirs':'${LIB}/endorsed',
                'jacorb.connection.client.pending_reply_timeout':'120000',
                'jacorb.log.default.verbosity':'2' ]
}

task makeScript(dependsOn: copyToLib) << { task ->
    dExtras = getDExtras()
    ScriptBuilder.create('threadSeis', 'edu.sc.seis.fissuresUtil.simple.ThreadedSeismogramClient', task.project, dExtras:dExtras)
    ScriptBuilder.create('nsbrowser', 'edu.sc.seis.fissuresUtil.namingService.Browser', task.project, dExtras:dExtras)
}
